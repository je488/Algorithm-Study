#D[i][j] : 길이가 i이고 마지막 숫자가 j인 계단 수의 개수
#j와 그 앞에 있는 수도 계단 수로 만들어야 함 -> j 앞에 올 수 있는 수는 j-1 또는 j+1
#D[i][j] = D[i-1][j-1] + D[i-1][j+1]
#j가 0이면 j-1은 -1이고 j가 9면 j+1은 10이므로 1 <= j <= 8의 범위에서만 적용
#j가 0인 경우 D[i][j] = D[i-1][j+1], j가 9인 경우 D[i][j] = D[i-1][j-1]
#마지막 수가 필요하므로 길이가 0이면 정의 불가능 -> 길이가 가장 작은 것은 1
#따라서 D[1][1], D[1][2], D[1][3], ..., D[1][9]를 1로 초기화
#문제에서 0으로 시작하는 수는 계단 수가 아니라고 했으므로 D[1][0] = 0
#정답은 D[n][0] ~ D[n][9]까지의 합
#오버플로우를 방지하기 위해 d의 값을 구할 때마다 나머지 연산하기
#정답은 10개의 값의 합으로 (A + B)%C = (A%C + B%C) % C이므로 마지막에 한번 더 나머지 연산
import sys
sys.stdin = open("input.txt", "r")
input = sys.stdin.readline
d = [[0] * 10 for _ in range(101)]
mod = 1000000000
n = int(input())
for i in range(1, 10):
    d[1][i] = 1
for i in range(2, n+1):
    for j in range(10):
        if j-1 >= 0:
            d[i][j] += d[i-1][j-1]
        if j+1 <= 9:
            d[i][j] += d[i-1][j+1]
        d[i][j] %= mod
print(sum(d[n]) % mod)

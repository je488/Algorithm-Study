#D[i][j] : 길이가 i이고 마지막 수가 j인 이친수의 개수, j는 0 또는 1
#j가 0과 1만 가능하므로 1차원으로 푸는 것도 가능
#D[i] : 길이가 i인 이친수의 개수로 마지막에 0이 오는 경우의 수 + 마지막에 1이 오는 경우의 수
#마지막에 0이 오는 경우 i-1번째 자리에는 0, 1 둘다 가능 -> D[i-1]
#마지막에 1이 오는 경우 i-1번째 자리에는 0만 가능 -> 1앞에는 무조건 0이 있으므로 01을 하나로 묶기
#위의 경우는 길이가 i-2인 이친수 뒤에 01을 붙인 것과 같음(길이가 i-2이면 마지막에 0, 1 둘다 가능)
#D[i] = D[i-1] + D[i-2]
#1앞에는 0이 오는 게 일반적이나 예외 존재 -> 한 자릿수 1인 경우 0이 맨앞에 올 수 없음
#따라서 D[1] = 1로 초기화
#D[2]는 길이가 2인 이친수의 개수로 10만 가능하므로 1(01, 11, 00 불가능)
import sys
sys.stdin = open("input.txt", "r")
input = sys.stdin.readline
d = [0] * 91
n = int(input())
d[1] = 1
d[2] = 1
for i in range(3, n+1):
    d[i] = d[i-1] + d[i-2]
print(d[n])
